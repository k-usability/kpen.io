buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'com.gradle.build-scan' version '2.0.2'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'nu.studer.jooq' version '3.0.3'
    id "io.freefair.lombok" version "4.0.1"
}

bootJar {
    archiveFileName = "kpen-0.0.1.jar"
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.repository.redhat.com/ga/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.jooq:jooq'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'io.github.cdimascio:java-dotenv:5.1.1'
    implementation 'org.postgresql:postgresql:42.2.6'
    implementation 'org.zalando:logbook-spring-boot-starter:2.0.0-RC.3'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.622'
    implementation 'com.github.jknack:handlebars:4.1.2'
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'com.auth0:auth0:1.14.2'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.projectodd:yaml-schema:0.2'
    implementation 'io.sentry:sentry:1.7.27'

    testImplementation 'org.springframework.security:spring-security-test:5.1.5.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    jooqRuntime 'org.postgresql:postgresql:42.2.6'
}


jooq {
    kpen(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/kpen'
            user = 'postgres'
            password = ''
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'io.kpen.jooq'
                directory = 'src/generated/java'
            }
        }
    }
}