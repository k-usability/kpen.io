/*
 * This file is generated by jOOQ.
 */
package io.kpen.jooq.tables.records;


import io.kpen.jooq.tables.Project;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record10<Integer, String, Integer, String, String, String, String, OffsetDateTime, Boolean, String> {

    private static final long serialVersionUID = -1001535405;

    /**
     * Setter for <code>public.project.id</code>.
     */
    public ProjectRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.project.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.project.name</code>.
     */
    public ProjectRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.project.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.project.user_id</code>.
     */
    public ProjectRecord setUserId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.project.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.project.s3_bucket</code>.
     */
    public ProjectRecord setS3Bucket(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.project.s3_bucket</code>.
     */
    public String getS3Bucket() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.project.s3_key</code>.
     */
    public ProjectRecord setS3Key(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.project.s3_key</code>.
     */
    public String getS3Key() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.project.program_filename</code>.
     */
    public ProjectRecord setProgramFilename(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.project.program_filename</code>.
     */
    public String getProgramFilename() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.project.spec_filename</code>.
     */
    public ProjectRecord setSpecFilename(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.project.spec_filename</code>.
     */
    public String getSpecFilename() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.project.creation_dt</code>.
     */
    public ProjectRecord setCreationDt(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.project.creation_dt</code>.
     */
    public OffsetDateTime getCreationDt() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.project.is_compilation_error</code>.
     */
    public ProjectRecord setIsCompilationError(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.project.is_compilation_error</code>.
     */
    public Boolean getIsCompilationError() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.project.compilation_error_message</code>.
     */
    public ProjectRecord setCompilationErrorMessage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.project.compilation_error_message</code>.
     */
    public String getCompilationErrorMessage() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, Integer, String, String, String, String, OffsetDateTime, Boolean, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, Integer, String, String, String, String, OffsetDateTime, Boolean, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Project.PROJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Project.PROJECT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Project.PROJECT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Project.PROJECT.S3_BUCKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Project.PROJECT.S3_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Project.PROJECT.PROGRAM_FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Project.PROJECT.SPEC_FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field8() {
        return Project.PROJECT.CREATION_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return Project.PROJECT.IS_COMPILATION_ERROR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Project.PROJECT.COMPILATION_ERROR_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getS3Bucket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getProgramFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getSpecFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component8() {
        return getCreationDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIsCompilationError();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getCompilationErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getS3Bucket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getProgramFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getSpecFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value8() {
        return getCreationDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsCompilationError();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getCompilationErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value4(String value) {
        setS3Bucket(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value5(String value) {
        setS3Key(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value6(String value) {
        setProgramFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value7(String value) {
        setSpecFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value8(OffsetDateTime value) {
        setCreationDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value9(Boolean value) {
        setIsCompilationError(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value10(String value) {
        setCompilationErrorMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord values(Integer value1, String value2, Integer value3, String value4, String value5, String value6, String value7, OffsetDateTime value8, Boolean value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Integer id, String name, Integer userId, String s3Bucket, String s3Key, String programFilename, String specFilename, OffsetDateTime creationDt, Boolean isCompilationError, String compilationErrorMessage) {
        super(Project.PROJECT);

        set(0, id);
        set(1, name);
        set(2, userId);
        set(3, s3Bucket);
        set(4, s3Key);
        set(5, programFilename);
        set(6, specFilename);
        set(7, creationDt);
        set(8, isCompilationError);
        set(9, compilationErrorMessage);
    }
}
