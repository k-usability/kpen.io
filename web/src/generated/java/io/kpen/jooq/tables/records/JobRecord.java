/*
 * This file is generated by jOOQ.
 */
package io.kpen.jooq.tables.records;


import io.kpen.jooq.tables.Job;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobRecord extends UpdatableRecordImpl<JobRecord> implements Record19<Integer, Integer, String, String, String, String, OffsetDateTime, String, String, String, Integer, Integer, OffsetDateTime, String, String, Integer, Boolean, Boolean, OffsetDateTime> {

    private static final long serialVersionUID = -44440143;

    /**
     * Setter for <code>public.job.id</code>.
     */
    public JobRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.job.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.job.project_id</code>.
     */
    public JobRecord setProjectId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.job.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.job.benchmark_name</code>.
     */
    public JobRecord setBenchmarkName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.job.benchmark_name</code>.
     */
    public String getBenchmarkName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.job.spec_name</code>.
     */
    public JobRecord setSpecName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.job.spec_name</code>.
     */
    public String getSpecName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.job.kprove</code>.
     */
    public JobRecord setKprove(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.job.kprove</code>.
     */
    public String getKprove() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.job.semantics</code>.
     */
    public JobRecord setSemantics(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.job.semantics</code>.
     */
    public String getSemantics() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.job.request_dt</code>.
     */
    public JobRecord setRequestDt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.job.request_dt</code>.
     */
    public OffsetDateTime getRequestDt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.job.s3_bucket</code>.
     */
    public JobRecord setS3Bucket(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.job.s3_bucket</code>.
     */
    public String getS3Bucket() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.job.s3_key</code>.
     */
    public JobRecord setS3Key(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.job.s3_key</code>.
     */
    public String getS3Key() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.job.spec_filename</code>.
     */
    public JobRecord setSpecFilename(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.job.spec_filename</code>.
     */
    public String getSpecFilename() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.job.timeout_sec</code>.
     */
    public JobRecord setTimeoutSec(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.job.timeout_sec</code>.
     */
    public Integer getTimeoutSec() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.job.memlimit_mb</code>.
     */
    public JobRecord setMemlimitMb(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.job.memlimit_mb</code>.
     */
    public Integer getMemlimitMb() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.job.processing_dt</code>.
     */
    public JobRecord setProcessingDt(OffsetDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.job.processing_dt</code>.
     */
    public OffsetDateTime getProcessingDt() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for <code>public.job.output_log_s3_key</code>.
     */
    public JobRecord setOutputLogS3Key(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.job.output_log_s3_key</code>.
     */
    public String getOutputLogS3Key() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.job.error_log_s3_key</code>.
     */
    public JobRecord setErrorLogS3Key(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.job.error_log_s3_key</code>.
     */
    public String getErrorLogS3Key() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.job.status_code</code>.
     */
    public JobRecord setStatusCode(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.job.status_code</code>.
     */
    public Integer getStatusCode() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>public.job.timed_out</code>.
     */
    public JobRecord setTimedOut(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.job.timed_out</code>.
     */
    public Boolean getTimedOut() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>public.job.proved</code>.
     */
    public JobRecord setProved(Boolean value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.job.proved</code>.
     */
    public Boolean getProved() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>public.job.completed_dt</code>.
     */
    public JobRecord setCompletedDt(OffsetDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.job.completed_dt</code>.
     */
    public OffsetDateTime getCompletedDt() {
        return (OffsetDateTime) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Integer, Integer, String, String, String, String, OffsetDateTime, String, String, String, Integer, Integer, OffsetDateTime, String, String, Integer, Boolean, Boolean, OffsetDateTime> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Integer, Integer, String, String, String, String, OffsetDateTime, String, String, String, Integer, Integer, OffsetDateTime, String, String, Integer, Boolean, Boolean, OffsetDateTime> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Job.JOB.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Job.JOB.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Job.JOB.BENCHMARK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Job.JOB.SPEC_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Job.JOB.KPROVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Job.JOB.SEMANTICS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field7() {
        return Job.JOB.REQUEST_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Job.JOB.S3_BUCKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Job.JOB.S3_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Job.JOB.SPEC_FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Job.JOB.TIMEOUT_SEC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Job.JOB.MEMLIMIT_MB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field13() {
        return Job.JOB.PROCESSING_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return Job.JOB.OUTPUT_LOG_S3_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Job.JOB.ERROR_LOG_S3_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field16() {
        return Job.JOB.STATUS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field17() {
        return Job.JOB.TIMED_OUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field18() {
        return Job.JOB.PROVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field19() {
        return Job.JOB.COMPLETED_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getBenchmarkName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSpecName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getKprove();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSemantics();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component7() {
        return getRequestDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getS3Bucket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getSpecFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getTimeoutSec();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getMemlimitMb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component13() {
        return getProcessingDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getOutputLogS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getErrorLogS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component16() {
        return getStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component17() {
        return getTimedOut();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component18() {
        return getProved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component19() {
        return getCompletedDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBenchmarkName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSpecName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getKprove();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSemantics();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value7() {
        return getRequestDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getS3Bucket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getSpecFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getTimeoutSec();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getMemlimitMb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value13() {
        return getProcessingDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getOutputLogS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getErrorLogS3Key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value16() {
        return getStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value17() {
        return getTimedOut();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value18() {
        return getProved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value19() {
        return getCompletedDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value2(Integer value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value3(String value) {
        setBenchmarkName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value4(String value) {
        setSpecName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value5(String value) {
        setKprove(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value6(String value) {
        setSemantics(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value7(OffsetDateTime value) {
        setRequestDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value8(String value) {
        setS3Bucket(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value9(String value) {
        setS3Key(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value10(String value) {
        setSpecFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value11(Integer value) {
        setTimeoutSec(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value12(Integer value) {
        setMemlimitMb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value13(OffsetDateTime value) {
        setProcessingDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value14(String value) {
        setOutputLogS3Key(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value15(String value) {
        setErrorLogS3Key(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value16(Integer value) {
        setStatusCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value17(Boolean value) {
        setTimedOut(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value18(Boolean value) {
        setProved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value19(OffsetDateTime value) {
        setCompletedDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, OffsetDateTime value7, String value8, String value9, String value10, Integer value11, Integer value12, OffsetDateTime value13, String value14, String value15, Integer value16, Boolean value17, Boolean value18, OffsetDateTime value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobRecord
     */
    public JobRecord() {
        super(Job.JOB);
    }

    /**
     * Create a detached, initialised JobRecord
     */
    public JobRecord(Integer id, Integer projectId, String benchmarkName, String specName, String kprove, String semantics, OffsetDateTime requestDt, String s3Bucket, String s3Key, String specFilename, Integer timeoutSec, Integer memlimitMb, OffsetDateTime processingDt, String outputLogS3Key, String errorLogS3Key, Integer statusCode, Boolean timedOut, Boolean proved, OffsetDateTime completedDt) {
        super(Job.JOB);

        set(0, id);
        set(1, projectId);
        set(2, benchmarkName);
        set(3, specName);
        set(4, kprove);
        set(5, semantics);
        set(6, requestDt);
        set(7, s3Bucket);
        set(8, s3Key);
        set(9, specFilename);
        set(10, timeoutSec);
        set(11, memlimitMb);
        set(12, processingDt);
        set(13, outputLogS3Key);
        set(14, errorLogS3Key);
        set(15, statusCode);
        set(16, timedOut);
        set(17, proved);
        set(18, completedDt);
    }
}
