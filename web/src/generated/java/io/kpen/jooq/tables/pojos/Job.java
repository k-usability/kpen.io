/*
 * This file is generated by jOOQ.
 */
package io.kpen.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Job implements Serializable {

    private static final long serialVersionUID = -1333636680;

    private final Integer        id;
    private final Integer        projectId;
    private final String         benchmarkName;
    private final String         specName;
    private final String         kprove;
    private final String         semantics;
    private final OffsetDateTime requestDt;
    private final String         s3Bucket;
    private final String         s3Key;
    private final String         specFilename;
    private final Integer        timeoutSec;
    private final Integer        memlimitMb;
    private final OffsetDateTime processingDt;
    private final String         outputLogS3Key;
    private final String         errorLogS3Key;
    private final Integer        statusCode;
    private final Boolean        timedOut;
    private final Boolean        proved;
    private final OffsetDateTime completedDt;

    public Job(Job value) {
        this.id = value.id;
        this.projectId = value.projectId;
        this.benchmarkName = value.benchmarkName;
        this.specName = value.specName;
        this.kprove = value.kprove;
        this.semantics = value.semantics;
        this.requestDt = value.requestDt;
        this.s3Bucket = value.s3Bucket;
        this.s3Key = value.s3Key;
        this.specFilename = value.specFilename;
        this.timeoutSec = value.timeoutSec;
        this.memlimitMb = value.memlimitMb;
        this.processingDt = value.processingDt;
        this.outputLogS3Key = value.outputLogS3Key;
        this.errorLogS3Key = value.errorLogS3Key;
        this.statusCode = value.statusCode;
        this.timedOut = value.timedOut;
        this.proved = value.proved;
        this.completedDt = value.completedDt;
    }

    public Job(
        Integer        id,
        Integer        projectId,
        String         benchmarkName,
        String         specName,
        String         kprove,
        String         semantics,
        OffsetDateTime requestDt,
        String         s3Bucket,
        String         s3Key,
        String         specFilename,
        Integer        timeoutSec,
        Integer        memlimitMb,
        OffsetDateTime processingDt,
        String         outputLogS3Key,
        String         errorLogS3Key,
        Integer        statusCode,
        Boolean        timedOut,
        Boolean        proved,
        OffsetDateTime completedDt
    ) {
        this.id = id;
        this.projectId = projectId;
        this.benchmarkName = benchmarkName;
        this.specName = specName;
        this.kprove = kprove;
        this.semantics = semantics;
        this.requestDt = requestDt;
        this.s3Bucket = s3Bucket;
        this.s3Key = s3Key;
        this.specFilename = specFilename;
        this.timeoutSec = timeoutSec;
        this.memlimitMb = memlimitMb;
        this.processingDt = processingDt;
        this.outputLogS3Key = outputLogS3Key;
        this.errorLogS3Key = errorLogS3Key;
        this.statusCode = statusCode;
        this.timedOut = timedOut;
        this.proved = proved;
        this.completedDt = completedDt;
    }

    public Integer getId() {
        return this.id;
    }

    public Integer getProjectId() {
        return this.projectId;
    }

    public String getBenchmarkName() {
        return this.benchmarkName;
    }

    public String getSpecName() {
        return this.specName;
    }

    public String getKprove() {
        return this.kprove;
    }

    public String getSemantics() {
        return this.semantics;
    }

    public OffsetDateTime getRequestDt() {
        return this.requestDt;
    }

    public String getS3Bucket() {
        return this.s3Bucket;
    }

    public String getS3Key() {
        return this.s3Key;
    }

    public String getSpecFilename() {
        return this.specFilename;
    }

    public Integer getTimeoutSec() {
        return this.timeoutSec;
    }

    public Integer getMemlimitMb() {
        return this.memlimitMb;
    }

    public OffsetDateTime getProcessingDt() {
        return this.processingDt;
    }

    public String getOutputLogS3Key() {
        return this.outputLogS3Key;
    }

    public String getErrorLogS3Key() {
        return this.errorLogS3Key;
    }

    public Integer getStatusCode() {
        return this.statusCode;
    }

    public Boolean getTimedOut() {
        return this.timedOut;
    }

    public Boolean getProved() {
        return this.proved;
    }

    public OffsetDateTime getCompletedDt() {
        return this.completedDt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Job (");

        sb.append(id);
        sb.append(", ").append(projectId);
        sb.append(", ").append(benchmarkName);
        sb.append(", ").append(specName);
        sb.append(", ").append(kprove);
        sb.append(", ").append(semantics);
        sb.append(", ").append(requestDt);
        sb.append(", ").append(s3Bucket);
        sb.append(", ").append(s3Key);
        sb.append(", ").append(specFilename);
        sb.append(", ").append(timeoutSec);
        sb.append(", ").append(memlimitMb);
        sb.append(", ").append(processingDt);
        sb.append(", ").append(outputLogS3Key);
        sb.append(", ").append(errorLogS3Key);
        sb.append(", ").append(statusCode);
        sb.append(", ").append(timedOut);
        sb.append(", ").append(proved);
        sb.append(", ").append(completedDt);

        sb.append(")");
        return sb.toString();
    }
}
