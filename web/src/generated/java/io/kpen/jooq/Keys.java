/*
 * This file is generated by jOOQ.
 */
package io.kpen.jooq;


import io.kpen.jooq.tables.Job;
import io.kpen.jooq.tables.Person;
import io.kpen.jooq.tables.Project;
import io.kpen.jooq.tables.ProjectTag;
import io.kpen.jooq.tables.records.JobRecord;
import io.kpen.jooq.tables.records.PersonRecord;
import io.kpen.jooq.tables.records.ProjectRecord;
import io.kpen.jooq.tables.records.ProjectTagRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<JobRecord, Integer> IDENTITY_JOB = Identities0.IDENTITY_JOB;
    public static final Identity<PersonRecord, Integer> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Identities0.IDENTITY_PROJECT;
    public static final Identity<ProjectTagRecord, Integer> IDENTITY_PROJECT_TAG = Identities0.IDENTITY_PROJECT_TAG;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JobRecord> JOB_PKEY = UniqueKeys0.JOB_PKEY;
    public static final UniqueKey<PersonRecord> PERSON_PKEY = UniqueKeys0.PERSON_PKEY;
    public static final UniqueKey<ProjectRecord> PROJECT_PKEY = UniqueKeys0.PROJECT_PKEY;
    public static final UniqueKey<ProjectTagRecord> PROJECT_TAG_PKEY = UniqueKeys0.PROJECT_TAG_PKEY;
    public static final UniqueKey<ProjectTagRecord> PROJECT_TAG_PROJECT_ID_TAG_KEY = UniqueKeys0.PROJECT_TAG_PROJECT_ID_TAG_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ProjectRecord, PersonRecord> PROJECT__PROJECT_USER_ID_FKEY = ForeignKeys0.PROJECT__PROJECT_USER_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<JobRecord, Integer> IDENTITY_JOB = Internal.createIdentity(Job.JOB, Job.JOB.ID);
        public static Identity<PersonRecord, Integer> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.ID);
        public static Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Internal.createIdentity(Project.PROJECT, Project.PROJECT.ID);
        public static Identity<ProjectTagRecord, Integer> IDENTITY_PROJECT_TAG = Internal.createIdentity(ProjectTag.PROJECT_TAG, ProjectTag.PROJECT_TAG.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<JobRecord> JOB_PKEY = Internal.createUniqueKey(Job.JOB, "job_pkey", Job.JOB.ID);
        public static final UniqueKey<PersonRecord> PERSON_PKEY = Internal.createUniqueKey(Person.PERSON, "person_pkey", Person.PERSON.ID);
        public static final UniqueKey<ProjectRecord> PROJECT_PKEY = Internal.createUniqueKey(Project.PROJECT, "project_pkey", Project.PROJECT.ID);
        public static final UniqueKey<ProjectTagRecord> PROJECT_TAG_PKEY = Internal.createUniqueKey(ProjectTag.PROJECT_TAG, "project_tag_pkey", ProjectTag.PROJECT_TAG.ID);
        public static final UniqueKey<ProjectTagRecord> PROJECT_TAG_PROJECT_ID_TAG_KEY = Internal.createUniqueKey(ProjectTag.PROJECT_TAG, "project_tag_project_id_tag_key", ProjectTag.PROJECT_TAG.PROJECT_ID, ProjectTag.PROJECT_TAG.TAG);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ProjectRecord, PersonRecord> PROJECT__PROJECT_USER_ID_FKEY = Internal.createForeignKey(io.kpen.jooq.Keys.PERSON_PKEY, Project.PROJECT, "project__project_user_id_fkey", Project.PROJECT.USER_ID);
    }
}
